{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xc495b1F328B601550190930b67e4bd7435a5Da03",
      "txHash": "0x0dbfdbf5be15144dfefa60427c76448cb9ee59eabf594dd9b02cc7c1f96571b6",
      "kind": "uups"
    },
    {
      "address": "0x437cba2432c4984276d2da136ef7F4Cd76515F1d",
      "txHash": "0xf2390aa49d2783f142422b35592282c7c1c04c29ad06ff412a66073d51580c57",
      "kind": "uups"
    },
    {
      "address": "0xd5cddf2dD2fCEBc103B9Cc1FBa186bA267e17454",
      "txHash": "0x84d6e5ce70caacc36ec0408f2451fbaebb75f48b8c7491c27f4560bf59ae59bf",
      "kind": "uups"
    },
    {
      "address": "0x8B8A2f49Bf97DE72c9D376ED967EB4a6BB7b78Ed",
      "txHash": "0x3c47235ed5ecad612f4c28e3705c01a8e87a02d4f437a65e019f1c8442c0289e",
      "kind": "uups"
    },
    {
      "address": "0xBF59DB036c389d24c10267e07735A7F88F253EaB",
      "txHash": "0xd5c4026f82e900626a6e967abbfbef7ffcbd7f8b8f29e5c31b66334a60b7f2a7",
      "kind": "uups"
    }
  ],
  "impls": {
    "38cdd64639d98e71ff51d232424492071ae192682b3ce95e718ff73873dbe463": {
      "address": "0x66934Cf84924bF8Bf5fe357897BF092e3b96e063",
      "txHash": "0x2d9d998698d2b7fba31402802498972adc009123c001f215f2aac426e5dca6c5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "projectCount",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Crowdfunding",
            "src": "contracts/Crowdfunding.sol:18"
          },
          {
            "label": "projects",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(Project)2120_storage)",
            "contract": "Crowdfunding",
            "src": "contracts/Crowdfunding.sol:19"
          },
          {
            "label": "pledged",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Crowdfunding",
            "src": "contracts/Crowdfunding.sol:20"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Crowdfunding",
            "src": "contracts/Crowdfunding.sol:22"
          },
          {
            "label": "feeRecipient",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "Crowdfunding",
            "src": "contracts/Crowdfunding.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Project)2120_storage)": {
            "label": "mapping(uint256 => struct Crowdfunding.Project)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Project)2120_storage": {
            "label": "struct Crowdfunding.Project",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "goal",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pledged",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "65ce0a835da0cd856b38b20b676986c8a2a3e1454192a7bf08e5aa0634d9f3c0": {
      "address": "0x80eE4BeFfF8d4BA01026f117EfD2aC9d6524481d",
      "txHash": "0x5c48d837b38a2efc822431addfb2b26317f575ea47169f97ea9e9637e280fa75",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "loanCount",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Mortgage",
            "src": "contracts/Mortgage.sol:18"
          },
          {
            "label": "processingFeeRate",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Mortgage",
            "src": "contracts/Mortgage.sol:19"
          },
          {
            "label": "loans",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(Loan)3434_storage)",
            "contract": "Mortgage",
            "src": "contracts/Mortgage.sol:21"
          },
          {
            "label": "borrowerLoans",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Mortgage",
            "src": "contracts/Mortgage.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Loan)3434_storage)": {
            "label": "mapping(uint256 => struct Mortgage.Loan)",
            "numberOfBytes": "32"
          },
          "t_struct(Loan)3434_storage": {
            "label": "struct Mortgage.Loan",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "interestRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "term",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "balance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "borrower",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "495ece92f1ec75474ac2900775578355230ffa585f98ca85b5340e91c18c04b8": {
      "address": "0xb70c1526B531546D3e3b9c1C3981a5206262D14A",
      "txHash": "0xae9c8564be93d58e888b74164dec7771bb32743c4f711ea3858cb6d3173f6453",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "disputeCount",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "DisputeResolution",
            "src": "contracts/DisputeResolution.sol:21"
          },
          {
            "label": "arbitrationFee",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "DisputeResolution",
            "src": "contracts/DisputeResolution.sol:22"
          },
          {
            "label": "fundPool",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "DisputeResolution",
            "src": "contracts/DisputeResolution.sol:23"
          },
          {
            "label": "disputes",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(Dispute)2614_storage)",
            "contract": "DisputeResolution",
            "src": "contracts/DisputeResolution.sol:25"
          },
          {
            "label": "userDisputes",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DisputeResolution",
            "src": "contracts/DisputeResolution.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(DisputeStatus)2598": {
            "label": "enum DisputeResolution.DisputeStatus",
            "members": [
              "Open",
              "Resolved",
              "Rejected"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Dispute)2614_storage)": {
            "label": "mapping(uint256 => struct DisputeResolution.Dispute)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Dispute)2614_storage": {
            "label": "struct DisputeResolution.Dispute",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "initiator",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "respondent",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "reason",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "resolution",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(DisputeStatus)2598",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ee4cbee1dd2b32212ce1fb807417797d7b0c401186ee77a93f593b997f7979d2": {
      "address": "0x8dD2A233c6c5774b79acEA2bE260EAF242FA23d6",
      "txHash": "0xc8ac1ff92ef7a933c0eee839d2ea11925e8567668829714422382860aabfa8cb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "propertyOwner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "FractionalOwnership",
            "src": "contracts/FractionalOwnership.sol:10"
          },
          {
            "label": "propertyDetails",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "FractionalOwnership",
            "src": "contracts/FractionalOwnership.sol:11"
          },
          {
            "label": "sharePrice",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FractionalOwnership",
            "src": "contracts/FractionalOwnership.sol:12"
          },
          {
            "label": "platformFeeRate",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "FractionalOwnership",
            "src": "contracts/FractionalOwnership.sol:13"
          },
          {
            "label": "feeCollector",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "FractionalOwnership",
            "src": "contracts/FractionalOwnership.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0b4ce0fb79b4b08f4ec16aaea5f78ce27820b08d1cae1488cce8a8df3a02e993": {
      "address": "0x5228064dF9485EF2Bb14EA41b8d12Dbd92c9b33c",
      "txHash": "0xe436d7d36feea19312ece4cd8149c135cfd48abd893951335fe95a8b8170b501",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "leaseCount",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "Lease",
            "src": "contracts/Lease.sol:22"
          },
          {
            "label": "leaseFee",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Lease",
            "src": "contracts/Lease.sol:23"
          },
          {
            "label": "fundPool",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Lease",
            "src": "contracts/Lease.sol:24"
          },
          {
            "label": "leases",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(LeaseAgreement)3158_storage)",
            "contract": "Lease",
            "src": "contracts/Lease.sol:26"
          },
          {
            "label": "userLeases",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Lease",
            "src": "contracts/Lease.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(LeaseStatus)3140": {
            "label": "enum Lease.LeaseStatus",
            "members": [
              "Active",
              "Terminated",
              "Expired"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LeaseAgreement)3158_storage)": {
            "label": "mapping(uint256 => struct Lease.LeaseAgreement)",
            "numberOfBytes": "32"
          },
          "t_struct(LeaseAgreement)3158_storage": {
            "label": "struct Lease.LeaseAgreement",
            "members": [
              {
                "label": "id",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lessor",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lessee",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "rent",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "deposit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endDate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LeaseStatus)3140",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
